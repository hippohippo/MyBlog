<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>序列化 on MoonLightWatch的博客</title>
    <link>http://blog.moonlightwatch.me/tags/%E5%BA%8F%E5%88%97%E5%8C%96/</link>
    <description>Recent content in 序列化 on MoonLightWatch的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Aug 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/%E5%BA%8F%E5%88%97%E5%8C%96/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Golang Json 反序列化 UTF-8 字符串遇到的错误</title>
      <link>http://blog.moonlightwatch.me/post/golang-json-error/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>http://blog.moonlightwatch.me/post/golang-json-error/</guid>
      <description>过程  从 http POST 数据中读取字节数据 将字节数据传入 json.Unmarshal 函数直接反序列化 遇到错误 invalid character &#39;ï&#39; looking for beginning of value  其中 http POST 数据是正常的Json，使用 fmt.Println 能够正常输出，并没有错误中提到的神奇字符
原因 在UTF-8字符转中，有可能会有一个BOM（字节顺序标记）（参见维基百科）
如果你直接输出 POST 的字节数据，会在头部发现 239 187 191 这三个字节，这个就是UTF-8的字节顺序标记。
但是要注意，这个字节顺序标记并不是必须的，有的 UTF-8 数据就是不带这个 BOM 的
解决 既然字节数据头部会有几个非数据字节，那么去掉就好了。
... body = bytes.TrimPrefix(body, []byte(&amp;quot;\xef\xbb\xbf&amp;quot;)) // Or []byte{239, 187, 191} ...  参见 Stackoverflow 中的问题：Got error &amp;ldquo;invalid character &amp;lsquo;ï&amp;rsquo; looking for beginning of value” from json.Unmarshal
最后 果然还是面向 Stackoverflow 编程</description>
    </item>
    
  </channel>
</rss>
